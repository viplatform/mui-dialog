name: Publish Alpha package

on:
  push:
    branches:
      - main

jobs:
  alpha-publish:
    permissions:
      contents: write
      packages: write
      pull-requests: write

    runs-on:
      labels: [self-hosted, dev-image-builder]
    env:
      CONFIG_TYPE: "UAT"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install-aws-cli
        uses: unfor19/install-aws-cli-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        env:
          AWS_ROLE_ARN: arn:aws:iam::594008745999:role/non-prod-github-arc-role
        with:
          role-to-assume: arn:aws:iam::594008745999:role/non-prod-github-arc-role
          aws-region: eu-west-2
          role-duration-seconds: 1200
          role-skip-session-tagging: true

      - name: Setup Nodejs and npm
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@viplatform"

      - name: Install dependencies
        run: npm install

      - run: npm install husky

      - name: Build the package
        run: npm run build

      - name: Stash uncommitted changes
        run: git stash --include-untracked

      - name: Commit version bump
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Extract version from package.json
        id: extract_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Bump package version to alpha
        run: |
          npm version prerelease --preid=alpha.$(git rev-parse --short HEAD)

      - name: Publish alpha version to GitHub Packages
        run: npm publish --tag alpha
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN_PACKAGES }}

      - uses: release-drafter/release-drafter@v6
        id: release-drafter
        with:
          config-name: release-drafter.yaml
          disable-autolabeler: true
          tag: ${{ env.RELEASE_VERSION }}
          release: ${{ env.RELEASE_VERSION }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
